
import seaborn as sns
from scipy.stats import norm
import matplotlib.mlab as mlab
import matplotlib.pyplot as plt
import numpy as np
import newdiscr as nd


low = (0, 0, 1) # dark blue
color = [low]#, medium, medium, high, low]

lista = []
for i in range(784):
        lista.append(i)

# ! dark blue is fake data

xplot = np.asarray(lista)
yplot = np.asarray([202,185,89,57,14,26,111,14,18,9,107,171,215,82,108,127,211,174,138,30,46,207,166,30,61,91,216,112,87,248,162,204,113,215,51,20,229,222,104,35,153,103,7,33,235,33,133,109,234,218,163,93,193,232,122,75,252,163,123,189,120,54,3,170,73,160,34,252,13,143,197,46,225,61,252,14,139,111,240,255,217,161,51,204,42,178,231,154,131,221,127,246,67,58,152,131,248,130,5,232,210,251,235,16,6,247,74,38,112,130,165,189,145,251,248,159,26,201,92,89,34,93,248,27,179,255,164,190,144,236,177,79,219,208,0,187,249,121,226,165,58,84,196,252,14,78,254,34,41,166,30,252,147,60,140,139,137,95,207,75,113,184,225,174,202,57,140,100,122,97,68,33,113,252,50,3,138,185,10,13,106,60,92,160,181,83,231,44,216,61,175,131,75,9,27,189,240,211,142,254,136,70,225,43,122,42,193,99,29,211,64,138,127,247,90,171,194,178,142,89,103,54,208,179,172,43,80,28,41,109,6,207,24,201,68,216,159,23,29,58,55,142,226,49,59,26,71,166,163,67,106,145,100,235,210,167,24,131,215,55,203,182,222,221,3,12,45,16,30,61,8,156,98,193,139,25,246,55,3,9,154,178,112,69,227,75,3,124,107,92,195,213,29,47,250,164,180,27,170,212,140,78,79,141,70,242,208,145,111,86,216,212,190,212,146,246,22,131,149,156,243,86,68,146,119,78,167,63,127,244,56,18,102,206,253,156,38,246,196,127,253,169,223,213,75,132,24,253,57,124,217,254,105,61,150,55,122,167,127,252,221,252,100,216,176,193,175,128,126,42,237,20,126,11,162,253,167,115,62,209,89,216,3,120,54,121,244,173,141,67,117,32,112,82,69,142,188,215,192,111,218,179,196,228,234,214,251,139,57,183,148,75,244,144,216,230,35,183,106,131,110,213,94,237,230,208,35,152,20,243,107,21,49,142,79,247,45,197,162,37,146,58,210,97,231,245,248,95,140,147,251,180,220,67,226,170,55,68,54,14,6,146,131,251,154,193,127,11,154,137,74,84,254,192,165,114,193,196,10,213,60,182,165,140,80,63,168,78,254,126,10,182,117,134,159,62,92,1,236,26,55,233,106,242,5,222,228,131,144,188,109,133,127,239,40,120,132,247,207,159,63,190,219,74,56,171,5,9,194,102,226,50,160,194,1,172,220,97,194,154,91,49,156,71,89,83,202,162,175,82,81,173,190,131,207,162,122,159,108,211,48,34,56,13,157,68,23,242,174,98,63,148,158,79,229,252,69,19,183,138,147,22,28,4,93,134,123,183,222,30,168,158,129,100,223,71,220,5,92,204,230,124,95,9,199,31,71,16,221,203,178,146,95,51,70,251,207,209,25,29,158,226,207,148,238,136,32,149,47,155,251,162,213,126,71,48,33,24,214,142,5,23,52,250,182,235,125,174,0,159,209,85,72,55,93,113,186,66,77,166,18,122,202,240,72,165,151,45,37,149,107,217,53,101,120,50,77,198,221,30,218,240,227,251,220,192,117,241,86,47,78,165,20,48,165,145,253,137,207,30,203,150,182,39,197,190,186,95,214,82,160,119,40,18,132,164,75,137,84,12,41,97,110,168,86,155,254,245,187,110,234,55,90,252,62,89,56,250,110,185,15,75,156,233,105,20,99,86,28,59,13,83,48,183,167,187,217,163,7,191,63,93,43,188,238,24,209,51,75,156,230,85,210,255,226,116,140,93,84,190,18,43,26,178])

#plt.scatter(
 #   x=xplot,
 #   y=yplot,
#    c=color,
#    alpha = 0.5

#)

#* light blue is real data

xsecplot = np.asarray(lista)
ysecplot = np.asarray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,17,17,17,17,81,180,180,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,139,253,253,253,253,253,253,253,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,228,253,253,253,253,253,253,253,207,197,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,213,253,253,253,253,253,253,253,253,253,253,223,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,231,253,253,253,108,40,40,115,244,253,253,134,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,114,114,114,37,0,0,0,205,253,253,253,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,253,253,253,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,253,253,253,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,253,253,253,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,253,253,253,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,99,96,0,0,45,224,253,253,195,10,0,0,0,0,0,0,0,0,0,0,0,11,25,105,83,189,189,228,253,251,189,189,218,253,253,210,27,0,0,0,0,0,0,0,0,0,0,42,116,173,253,253,253,253,253,253,253,253,253,253,253,253,253,221,116,7,0,0,0,0,0,0,0,0,0,118,253,253,253,253,245,212,222,253,253,253,253,253,253,253,253,253,253,160,15,0,0,0,0,0,0,0,0,254,253,253,253,189,99,0,32,202,253,253,253,240,122,122,190,253,253,253,174,0,0,0,0,0,0,0,0,255,253,253,253,238,222,222,222,241,253,253,230,70,0,0,17,175,229,253,253,0,0,0,0,0,0,0,0,158,253,253,253,253,253,253,253,253,205,106,65,0,0,0,0,0,62,244,157,0,0,0,0,0,0,0,0,6,26,179,179,179,179,179,30,15,10,0,0,0,0,0,0,0,0,14,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])

#high = (0, 1,0) # light blue

#color2 = [high]

#plt.scatter(
#    x=xsecplot,
#    y=ysecplot,
#    c=color2,
#    alpha = 0.5
#)


# Calculating parameters (Here, intercept-theta1 and slope-theta0)
# of the line using the numpy.polyfit() function
theta = np.polyfit(xsecplot, ysecplot, 1)

print(f'The parameters of the line: {theta}')

# Now, calculating the y-axis values against x-values according to
# the parameters theta0, theta1 and theta2
y_line = theta[1] + theta[0] * xsecplot

# Plotting the data points and the best fit line
plt.plot(xsecplot, y_line, 'r')
plt.title('Best fit line using numpy.polyfit()')
plt.xlabel('x-axis')
plt.ylabel('y-axis')

plt.hist(ysecplot, bins=15)
plt.gca().set(title='Frequency Histogram', ylabel='Frequency')



data = norm.rvs(5,0.4,size=1000) # you can use a pandas series or a list if you want

sns.displot(ysecplot)

plt.show()




#? black is fake with weights data

xthrplot = np.asarray(lista)
ythrplot = np.asarray([222.20000000000002, 203.50000000000003, 97.9, 62.7, 15.400000000000002, 28.6, 122.10000000000001, 15.400000000000002, 19.8, 9.9, 117.7, 188.10000000000002, 236.50000000000003, 90.2, 118.80000000000001, 139.70000000000002, 232.10000000000002, 191.4, 151.8, 33.0, 50.6, 227.70000000000002, 182.60000000000002, 33.0, 67.10000000000001, 100.10000000000001, 237.60000000000002, 123.20000000000002, 95.7, 272.8, 178.20000000000002, 224.4, 124.30000000000001, 236.50000000000003, 56.1, 22.0, 251.90000000000003, 244.20000000000002, 114.4, 38.5, 168.3, 113.30000000000001, 7.700000000000001, 36.300000000000004, 258.5, 36.300000000000004, 146.3, 119.9, 257.40000000000003, 239.8, 179.3, 102.30000000000001, 212.3, 255.20000000000002, 134.20000000000002, 82.5, 277.20000000000005, 179.3, 135.3, 207.9, 132.0, 59.400000000000006, 3.3000000000000003, 187.00000000000003, 80.30000000000001, 176.0, 37.400000000000006, 277.20000000000005, 14.3, 157.3, 216.70000000000002, 50.6, 247.50000000000003, 67.10000000000001, 277.20000000000005, 15.400000000000002, 152.9, 122.10000000000001, 264.0, 280.5, 238.70000000000002, 177.10000000000002, 56.1, 224.4, 46.2, 195.8, 254.10000000000002, 169.4, 144.10000000000002, 243.10000000000002, 139.70000000000002, 270.6, 73.7, 63.800000000000004, 167.20000000000002, 144.10000000000002, 272.8, 143.0, 5.5, 255.20000000000002, 231.00000000000003, 276.1, 258.5, 17.6, 6.6000000000000005, 271.70000000000005, 81.4, 41.800000000000004, 123.20000000000002, 143.0, 181.50000000000003, 207.9, 159.5, 276.1, 272.8, 174.9, 28.6, 221.10000000000002, 101.2, 97.9, 37.400000000000006, 102.30000000000001, 272.8, 29.700000000000003, 196.9, 280.5, 180.4, 209.00000000000003, 158.4, 259.6, 194.70000000000002, 86.9, 240.9, 228.8, 0.0, 205.70000000000002, 273.90000000000003, 133.10000000000002, 248.60000000000002, 181.50000000000003, 63.800000000000004, 92.4, 215.60000000000002, 277.20000000000005, 15.400000000000002, 85.80000000000001, 279.40000000000003, 37.400000000000006, 45.1, 182.60000000000002, 33.0, 277.20000000000005, 161.70000000000002, 66.0, 154.0, 152.9, 150.70000000000002, 104.50000000000001, 227.70000000000002, 82.5, 124.30000000000001, 202.4, 247.50000000000003, 191.4, 222.20000000000002, 62.7, 154.0, 110.00000000000001, 134.20000000000002, 106.7, 74.80000000000001, 36.300000000000004, 124.30000000000001, 277.20000000000005, 55.00000000000001, 3.3000000000000003, 151.8, 203.50000000000003, 11.0, 14.3, 116.60000000000001, 66.0, 101.2, 176.0, 199.10000000000002, 91.30000000000001, 254.10000000000002, 48.400000000000006, 237.60000000000002, 67.10000000000001, 192.50000000000003, 144.10000000000002, 82.5, 9.9, 29.700000000000003, 207.9, 264.0, 232.10000000000002, 156.20000000000002, 279.40000000000003, 149.60000000000002, 77.0, 247.50000000000003, 47.300000000000004, 134.20000000000002, 46.2, 212.3, 108.9, 31.900000000000002, 232.10000000000002, 70.4, 151.8, 139.70000000000002, 271.70000000000005, 99.00000000000001, 188.10000000000002, 213.4, 195.8, 156.20000000000002, 97.9, 113.30000000000001, 59.400000000000006, 228.8, 196.9, 189.20000000000002, 47.300000000000004, 88.0, 30.800000000000004, 45.1, 119.9, 6.6000000000000005, 227.70000000000002, 26.400000000000002, 221.10000000000002, 74.80000000000001, 237.60000000000002, 174.9, 25.3, 31.900000000000002, 63.800000000000004, 60.50000000000001, 156.20000000000002, 248.60000000000002, 53.900000000000006, 64.9, 28.6, 78.10000000000001, 182.60000000000002, 179.3, 73.7, 116.60000000000001, 159.5, 110.00000000000001, 258.5, 231.00000000000003, 183.70000000000002, 26.400000000000002, 144.10000000000002, 236.50000000000003, 60.50000000000001, 223.3, 200.20000000000002, 244.20000000000002, 243.10000000000002, 3.3000000000000003, 13.200000000000001, 49.50000000000001, 17.6, 33.0, 67.10000000000001, 8.8, 171.60000000000002, 107.80000000000001, 212.3, 152.9, 27.500000000000004, 270.6, 60.50000000000001, 3.3000000000000003, 9.9, 169.4, 195.8, 123.20000000000002, 75.9, 249.70000000000002, 82.5, 3.3000000000000003, 136.4, 117.7, 101.2, 214.50000000000003, 234.3, 31.900000000000002, 51.7, 275.0, 180.4, 198.00000000000003, 29.700000000000003, 187.00000000000003, 233.20000000000002, 154.0, 85.80000000000001, 86.9, 155.10000000000002, 77.0, 266.20000000000005, 228.8, 159.5, 122.10000000000001, 94.60000000000001, 237.60000000000002, 233.20000000000002, 209.00000000000003, 233.20000000000002, 160.60000000000002, 270.6, 24.200000000000003, 144.10000000000002, 163.9, 171.60000000000002, 267.3, 94.60000000000001, 74.80000000000001, 160.60000000000002, 130.9, 85.80000000000001, 183.70000000000002, 69.30000000000001, 139.70000000000002, 268.40000000000003, 61.60000000000001, 19.8, 112.2, 226.60000000000002, 278.3, 171.60000000000002, 41.800000000000004, 270.6, 215.60000000000002, 139.70000000000002, 278.3, 185.9, 245.3, 234.3, 82.5, 145.20000000000002, 26.400000000000002, 278.3, 62.7, 136.4, 238.70000000000002, 279.40000000000003, 115.50000000000001, 67.10000000000001, 165.0, 60.50000000000001, 134.20000000000002, 183.70000000000002, 139.70000000000002, 277.20000000000005, 243.10000000000002, 277.20000000000005, 110.00000000000001, 237.60000000000002, 193.60000000000002, 212.3, 192.50000000000003, 140.8, 138.60000000000002, 46.2, 260.70000000000005, 22.0, 138.60000000000002, 12.100000000000001, 178.20000000000002, 278.3, 183.70000000000002, 126.50000000000001, 68.2, 229.9, 97.9, 237.60000000000002, 3.3000000000000003, 132.0, 59.400000000000006, 133.10000000000002, 268.40000000000003, 190.3, 155.10000000000002, 73.7, 128.70000000000002, 35.2, 123.20000000000002, 90.2, 75.9, 156.20000000000002, 206.8, 236.50000000000003, 211.20000000000002, 122.10000000000001, 239.8, 196.9, 215.60000000000002, 250.8, 257.40000000000003, 235.4, 276.1, 152.9, 62.7, 201.3, 162.8, 82.5, 268.40000000000003, 158.4, 237.60000000000002, 253.00000000000003, 38.5, 201.3, 116.60000000000001, 144.10000000000002, 121.00000000000001, 234.3, 103.4, 260.70000000000005, 253.00000000000003, 228.8, 38.5, 167.20000000000002, 22.0, 267.3, 117.7, 23.1, 53.900000000000006, 156.20000000000002, 86.9, 271.70000000000005, 49.50000000000001, 216.70000000000002, 178.20000000000002, 40.7, 160.60000000000002, 63.800000000000004, 231.00000000000003, 106.7, 254.10000000000002, 269.5, 272.8, 104.50000000000001, 154.0, 161.70000000000002, 276.1, 198.00000000000003, 242.00000000000003, 73.7, 248.60000000000002, 187.00000000000003, 60.50000000000001, 74.80000000000001, 59.400000000000006, 15.400000000000002, 6.6000000000000005, 160.60000000000002, 144.10000000000002, 276.1, 169.4, 212.3, 139.70000000000002, 12.100000000000001, 169.4, 150.70000000000002, 81.4, 92.4, 279.40000000000003, 211.20000000000002, 181.50000000000003, 125.4, 212.3, 215.60000000000002, 11.0, 234.3, 66.0, 200.20000000000002, 181.50000000000003, 154.0, 88.0, 69.30000000000001, 184.8, 85.80000000000001, 279.40000000000003, 138.60000000000002, 11.0, 200.20000000000002, 128.70000000000002, 147.4, 174.9, 68.2, 101.2, 1.1, 259.6, 28.6, 60.50000000000001, 256.3, 116.60000000000001, 266.20000000000005, 5.5, 244.20000000000002, 250.8, 144.10000000000002, 158.4, 206.8, 119.9, 146.3, 139.70000000000002, 262.90000000000003, 44.0, 132.0, 145.20000000000002, 271.70000000000005, 227.70000000000002, 174.9, 69.30000000000001, 209.00000000000003, 240.9, 81.4, 61.60000000000001, 188.10000000000002, 5.5, 9.9, 213.4, 112.2, 248.60000000000002, 55.00000000000001, 176.0, 213.4, 1.1, 189.20000000000002, 242.00000000000003, 106.7, 213.4, 169.4, 100.10000000000001, 53.900000000000006, 171.60000000000002, 78.10000000000001, 97.9, 91.30000000000001, 222.20000000000002, 178.20000000000002, 192.50000000000003, 90.2, 89.10000000000001, 190.3, 209.00000000000003, 144.10000000000002, 227.70000000000002, 178.20000000000002, 134.20000000000002, 174.9, 118.80000000000001, 232.10000000000002, 52.800000000000004, 37.400000000000006, 61.60000000000001, 14.3, 172.70000000000002, 74.80000000000001, 25.3, 266.20000000000005, 191.4, 107.80000000000001, 69.30000000000001, 162.8, 173.8, 86.9, 251.90000000000003, 277.20000000000005, 75.9, 20.900000000000002, 201.3, 151.8, 161.70000000000002, 24.200000000000003, 30.800000000000004, 4.4, 102.30000000000001, 147.4, 135.3, 201.3, 244.20000000000002, 33.0, 184.8, 173.8, 141.9, 110.00000000000001, 245.3, 78.10000000000001, 242.00000000000003, 5.5, 101.2, 224.4, 253.00000000000003, 136.4, 104.50000000000001, 9.9, 218.9, 34.1, 78.10000000000001, 17.6, 243.10000000000002, 223.3, 195.8, 160.60000000000002, 104.50000000000001, 56.1, 77.0, 276.1, 227.70000000000002, 229.9, 27.500000000000004, 31.900000000000002, 173.8, 248.60000000000002, 227.70000000000002, 162.8, 261.8, 149.60000000000002, 35.2, 163.9, 51.7, 170.5, 276.1, 178.20000000000002, 234.3, 138.60000000000002, 78.10000000000001, 52.800000000000004, 36.300000000000004, 26.400000000000002, 235.4, 156.20000000000002, 5.5, 25.3, 57.2, 275.0, 200.20000000000002, 258.5, 137.5, 191.4, 0.0, 174.9, 229.9, 93.50000000000001, 79.2, 60.50000000000001, 102.30000000000001, 124.30000000000001, 204.60000000000002, 72.60000000000001, 84.7, 182.60000000000002, 19.8, 134.20000000000002, 222.20000000000002, 264.0, 79.2, 181.50000000000003, 166.10000000000002, 49.50000000000001, 40.7, 163.9, 117.7, 238.70000000000002, 58.300000000000004, 111.10000000000001, 132.0, 55.00000000000001, 84.7, 217.8, 243.10000000000002, 33.0, 239.8, 264.0, 249.70000000000002, 276.1, 242.00000000000003, 211.20000000000002, 128.70000000000002, 265.1, 94.60000000000001, 51.7, 85.80000000000001, 181.50000000000003, 22.0, 52.800000000000004, 181.50000000000003, 159.5, 278.3, 150.70000000000002, 227.70000000000002, 33.0, 223.3, 165.0, 200.20000000000002, 42.900000000000006, 216.70000000000002, 209.00000000000003, 204.60000000000002, 104.50000000000001, 235.4, 90.2, 176.0, 130.9, 44.0, 19.8, 145.20000000000002, 180.4, 82.5, 150.70000000000002, 92.4, 13.200000000000001, 45.1, 106.7, 121.00000000000001, 184.8, 94.60000000000001, 170.5, 279.40000000000003, 269.5, 205.70000000000002, 121.00000000000001, 257.40000000000003, 60.50000000000001, 99.00000000000001, 277.20000000000005, 68.2, 97.9, 61.60000000000001, 275.0, 121.00000000000001, 203.50000000000003, 16.5, 82.5, 171.60000000000002, 256.3, 115.50000000000001, 22.0, 108.9, 94.60000000000001, 30.800000000000004, 64.9, 14.3, 91.30000000000001, 52.800000000000004, 201.3, 183.70000000000002, 205.70000000000002, 238.70000000000002, 179.3, 7.700000000000001, 210.10000000000002, 69.30000000000001, 102.30000000000001, 47.300000000000004, 206.8, 261.8, 26.400000000000002, 229.9, 56.1, 82.5, 171.60000000000002, 253.00000000000003, 93.50000000000001, 231.00000000000003, 280.5, 248.60000000000002, 127.60000000000001, 154.0, 102.30000000000001, 92.4, 209.00000000000003, 19.8, 47.300000000000004, 28.6, 195.8])

medium  = (0, 0, 0) # black

color3 = [medium]

plt.scatter(
    x=xthrplot,
    y=ythrplot,
    c=color3,
    alpha = 0.5
)






# create one with weights and biases
# do this for all the rows then plot all of them on a graph. for label 0. 










#plt.show()